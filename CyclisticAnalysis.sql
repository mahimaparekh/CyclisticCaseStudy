 /**
	Creating a view to combine all the monthly data
*/

CREATE VIEW BIKE_DATA AS
SELECT * FROM Jan_2024
UNION ALL SELECT * FROM Feb_2023
UNION ALL SELECT * FROM Mar_2023
UNION ALL SELECT * FROM Apr_2023
UNION ALL SELECT * FROM May_2023
UNION ALL SELECT * FROM Jun_2023
UNION ALL SELECT * FROM Jul_2023
UNION ALL SELECT * FROM Aug_2023
UNION ALL SELECT * FROM Sep_2023
UNION ALL SELECT * FROM Oct_2023
UNION ALL SELECT * FROM Nov_2023
UNION ALL SELECT * FROM Dec_2023

/**
	Total number of bookings in the past 12 months
*/

SELECT COUNT(*) AS TOTAL_RIDES
FROM BIKE_DATA

/**
	Types of bikes available
*/

SELECT DISTINCT(RIDEABLE_TYPE) AS BIKE_TYPES, COUNT(*) AS TOTAL_RIDES
FROM BIKE_DATA
GROUP BY (RIDEABLE_TYPE)

/**
	Total Bookings Done by Each Rider
*/

SELECT MEMBER_CASUAL, COUNT(*) AS TOTAL_RIDES,
CONCAT(CAST(ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (),2) AS FLOAT), '%') AS PERCENTAGE_BOOKED
FROM BIKE_DATA
GROUP BY MEMBER_CASUAL

/**
	Total Monthly Bookings
*/

SELECT 
CASE
	WHEN MONTH(STARTED_AT) = 1 THEN 'January'
	WHEN MONTH(STARTED_AT) = 2 THEN 'February'
	WHEN MONTH(STARTED_AT) = 3 THEN 'March'
	WHEN MONTH(STARTED_AT) = 4 THEN 'April'
	WHEN MONTH(STARTED_AT) = 5 THEN 'May'
	WHEN MONTH(STARTED_AT) = 6 THEN 'June'
	WHEN MONTH(STARTED_AT) = 7 THEN 'July'
	WHEN MONTH(STARTED_AT) = 8 THEN 'August'
	WHEN MONTH(STARTED_AT) = 9 THEN 'September'
	WHEN MONTH(STARTED_AT) = 10 THEN 'October'
	WHEN MONTH(STARTED_AT) = 11 THEN 'November'
	WHEN MONTH(STARTED_AT) = 12 THEN 'December'
END AS MONTHS,
MEMBER_CASUAL,
COUNT(*) AS TOTAL_RIDES
FROM BIKE_DATA
GROUP BY MONTH(STARTED_AT), MEMBER_CASUAL
ORDER BY MONTH(STARTED_AT) ASC, 2 ASC

/**
	Preferred ride type by each rider
*/

SELECT RIDEABLE_TYPE, MEMBER_CASUAL, COUNT(*) AS TOTAL_RIDES_BY_RIDE_TYPE
FROM BIKE_DATA 
GROUP BY RIDEABLE_TYPE, MEMBER_CASUAL
ORDER BY 3 DESC

/**
	Start station with most bookings per rider type
*/

SELECT TOP 5 START_STATION_NAME, MEMBER_CASUAL, COUNT(*) TOTAL_RIDES
FROM BIKE_DATA 
WHERE START_STATION_NAME <> 'NULL'
GROUP BY START_STATION_NAME, MEMBER_CASUAL
ORDER BY 3 DESC

/**
	Maximum day of booking
*/

SELECT TOP 10 (DAYS_BOOKED), MEMBER_CASUAL 
FROM BIKE_DATA 
ORDER BY 1 DESC

/**
	Total number of bookings done per day of the week
*/

SELECT DAY_OF_WEEK, MEMBER_CASUAL, COUNT(*) AS TOTAL_RIDES
FROM BIKE_DATA
GROUP BY DAY_OF_WEEK, MEMBER_CASUAL
ORDER BY 3 DESC
